Texture2DArray g_Texture;
SamplerState g_Texture_sampler; // By convention, texture samplers must use the '_sampler' suffix

struct PSInput
{
    float4 Pos : SV_POSITION;
    float2 UV  : TEX_COORD;
    float3 Normal  : NORMAL;
    float TexIndex : TEX_ARRAY_INDEX;
};

struct PSOutput
{
    float4 Color  : SV_TARGET0;
    float  DepthZ : SV_TARGET1;
    float4  Normal : SV_TARGET2;
    float4  Material : SV_TARGET3;
};

void main(in  PSInput  PSIn,
          out PSOutput PSOut)
{
    float4 Color = g_Texture.Sample(g_Texture_sampler, float3(PSIn.UV, PSIn.TexIndex));
    Color.a = 1.0; // roughness
    // PSOut.Color = float4(PSIn.UV, 0.0, 1.0);
    PSOut.Color = Color;
    PSOut.DepthZ = DepthToNormalizedDeviceZ(PSIn.Pos.z);
    PSOut.Normal = float4(PSIn.Normal, 0.0); // Assuming a flat surface facing the camera

    PSOut.Material = float4(0.0, 0.0, 0.0, 1.5 / 100.0);
}